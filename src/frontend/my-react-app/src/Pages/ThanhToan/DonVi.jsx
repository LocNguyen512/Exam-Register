import React, { useState, useEffect } from 'react';

function DonVi() {
  const [searchTerm, setSearchTerm] = useState('');  // T·ª´ kh√≥a t√¨m ki·∫øm
  const [searchType, setSearchType] = useState('ten_don_vi');  // Lo·∫°i t√¨m ki·∫øm
  const [customerData, setCustomerData] = useState(null);  // D·ªØ li·ªáu kh√°ch h√†ng
  const [certificateData, setCertificateData] = useState(null);  // D·ªØ li·ªáu ch·ª©ng ch·ªâ
  const [loading, setLoading] = useState(false);  // Tr·∫°ng th√°i t√¨m ki·∫øm

  // X·ª≠ l√Ω s·ª± ki·ªán nh·∫•n n√∫t t√¨m ki·∫øm
  const handleSearch = async () => {
    let url = '';  // Bi·∫øn ƒë·ªÉ ch·ª©a URL c·ªßa API
    const params = { [searchType]: searchTerm };  // T·∫°o ƒë·ªëi t∆∞·ª£ng ch·ª©a tham s·ªë g·ª≠i ƒëi

    // Ch·ªçn URL API d·ª±a v√†o lo·∫°i t√¨m ki·∫øm
    if (searchType === 'ten_don_vi') {
      url = 'http://127.0.0.1:5000/thanhtoandonvi/timkiem_theo_ten_don_vi';  // API t√¨m theo t√™n ƒë∆°n v·ªã
    } else if (searchType === 'ma_kh') {
      url = 'http://127.0.0.1:5000/thanhtoandonvi/timkiem_theo_ma_kh';  // API t√¨m theo m√£ kh√°ch h√†ng
    } else if (searchType === 'ma_ptt') {
      url = 'http://127.0.0.1:5000/thanhtoandonvi/timkiem_cc_theo_ma_ptt';  // API t√¨m theo m√£ phi·∫øu thanh to√°n
    }

    // T·∫°o URL v·ªõi tham s·ªë query string
    const urlWithParams = new URL(url, window.location.origin);
    urlWithParams.search = new URLSearchParams(params).toString();  // T·∫°o query string t·ª´ params

    setLoading(true);  // ƒê·∫∑t tr·∫°ng th√°i loading khi b·∫Øt ƒë·∫ßu t√¨m ki·∫øm

    try {
      // G·ª≠i y√™u c·∫ßu GET v·ªõi query string
      const customerResponse = await fetch(urlWithParams, {
        method: 'GET',  // D√πng GET
        headers: {
          'Content-Type': 'application/json',  // N·ªôi dung l√† JSON
        },
      });

      const customerData = await customerResponse.json();  // Nh·∫≠n k·∫øt qu·∫£ tr·∫£ v·ªÅ t·ª´ API
      console.log('K·∫øt qu·∫£ t√¨m ki·∫øm kh√°ch h√†ng:', customerData);

      if (customerData) {
        setCustomerData(customerData);  // L∆∞u d·ªØ li·ªáu kh√°ch h√†ng v√†o state
        fetchCertificates(customerData.ma_kh);  // T√¨m ch·ª©ng ch·ªâ li√™n quan ƒë·∫øn kh√°ch h√†ng
      } else {
        setCustomerData(null);  // N·∫øu kh√¥ng c√≥ d·ªØ li·ªáu, reset state
      }
    } catch (error) {
      console.error('L·ªói khi t√¨m ki·∫øm kh√°ch h√†ng:', error);  // Log l·ªói n·∫øu c√≥
    } finally {
      setLoading(false);  // K·∫øt th√∫c tr·∫°ng th√°i loading
    }
  };

  // L·∫•y danh s√°ch ch·ª©ng ch·ªâ
  const fetchCertificates = async (ma_kh) => {
    let url = '';
    const params = { ma_kh };

    // Ch·ªçn URL API t√¨m ch·ª©ng ch·ªâ theo lo·∫°i t√¨m ki·∫øm
    if (searchType === 'ten_don_vi') {
      url = '/timkiem_cc_theo_ten_don_vi';
    } else if (searchType === 'ma_kh') {
      url = '/timkiem_cc_theo_ma_kh';
    } else if (searchType === 'ma_ptt') {
      url = '/timkiem_cc_theo_ma_ptt';
    }

    // T·∫°o URL v·ªõi tham s·ªë query string
    const urlWithParams = new URL(url, window.location.origin);
    urlWithParams.search = new URLSearchParams(params).toString();

    try {
      // G·ª≠i y√™u c·∫ßu GET v·ªõi query string
      const certificateResponse = await fetch(urlWithParams, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',  // N·ªôi dung l√† JSON
        },
      });

      const certificateData = await certificateResponse.json();  // Nh·∫≠n k·∫øt qu·∫£ tr·∫£ v·ªÅ t·ª´ API
      console.log('Danh s√°ch ch·ª©ng ch·ªâ:', certificateData);

      if (certificateData) {
        setCertificateData(certificateData);  // L∆∞u danh s√°ch ch·ª©ng ch·ªâ v√†o state
      } else {
        setCertificateData(null);  // N·∫øu kh√¥ng c√≥ ch·ª©ng ch·ªâ, reset state
      }
    } catch (error) {
      console.error('L·ªói khi t√¨m ch·ª©ng ch·ªâ:', error);  // Log l·ªói n·∫øu c√≥
    }
  };

  // H√†m x·ª≠ l√Ω x√°c nh·∫≠n thanh to√°n
  const handleConfirmPayment = async () => {
    // Hi·ªÉn th·ªã h·ªôp tho·∫°i x√°c nh·∫≠n
    const isConfirmed = window.confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën thanh to√°n cho kh√°ch h√†ng n√†y kh√¥ng?');
    
    if (isConfirmed) {
      const ma_ptt = customerData?.ma_ptt;  // L·∫•y m√£ phi·∫øu thanh to√°n t·ª´ d·ªØ li·ªáu kh√°ch h√†ng
      const tinh_trang = 'ƒê√£ thanh to√°n';  // Tr·∫°ng th√°i thanh to√°n

      // G·ª≠i y√™u c·∫ßu API c·∫≠p nh·∫≠t t√¨nh tr·∫°ng thanh to√°n
      try {
        const response = await fetch('/capnhat_trangthai_thanhtoan', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',  // N·ªôi dung l√† JSON
          },
          body: JSON.stringify({ ma_ptt, tinh_trang }),  // G·ª≠i m√£ phi·∫øu thanh to√°n v√† tr·∫°ng th√°i
        });

        const result = await response.json();
        if (result.success) {
          alert('Thanh to√°n th√†nh c√¥ng!');
          // C·∫≠p nh·∫≠t l·∫°i tr·∫°ng th√°i c·ªßa kh√°ch h√†ng
          setCustomerData((prevData) => ({ ...prevData, tinhTrangThanhToan: tinh_trang }));
        } else {
          alert('C√≥ l·ªói khi thanh to√°n. Vui l√≤ng th·ª≠ l·∫°i!');
        }
      } catch (error) {
        console.error('L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i thanh to√°n:', error);  // Log l·ªói n·∫øu c√≥
        alert('L·ªói h·ªá th·ªëng. Vui l√≤ng th·ª≠ l·∫°i sau.');
      }
    }
  };

  return (
    <div className="payment-form">
      <h2>üîç T√¨m ki·∫øm kh√°ch h√†ng</h2>

      {/* L·ª±a ch·ªçn lo·∫°i t√¨m ki·∫øm */}
      <div>
        <label>Ch·ªçn lo·∫°i t√¨m ki·∫øm</label>
        <select value={searchType} onChange={(e) => setSearchType(e.target.value)}>
          <option value="ten_don_vi">T√™n ƒë∆°n v·ªã</option>
          <option value="ma_kh">M√£ kh√°ch h√†ng</option>
          <option value="ma_ptt">M√£ phi·∫øu thanh to√°n</option>
        </select>
      </div>

      {/* Input cho t·ª´ kh√≥a t√¨m ki·∫øm */}
      <input
        type="text"
        placeholder="Nh·∫≠p t·ª´ kh√≥a..."
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
      />

      {/* N√∫t t√¨m ki·∫øm */}
      <button onClick={handleSearch}>T√¨m ki·∫øm</button>

      {/* Hi·ªÉn th·ªã th√¥ng b√°o khi ƒëang t√¨m ki·∫øm */}
      {loading && <p>üîÑ ƒêang t√¨m ki·∫øm...</p>}

      {/* Hi·ªÉn th·ªã th√¥ng tin kh√°ch h√†ng v√† ch·ª©ng ch·ªâ n·∫øu c√≥ */}
      {customerData && !loading && (
        <div>
          <h3>Th√¥ng tin kh√°ch h√†ng</h3>
          <div>T√™n ƒë∆°n v·ªã: {customerData.tenDonVi}</div>
          <div>Email: {customerData.email}</div>

          <h3>Danh s√°ch ch·ª©ng ch·ªâ</h3>
          <table>
            <thead>
              <tr>
                <th>T√™n ch·ª©ng ch·ªâ</th>
                <th>S·ªë l∆∞·ª£ng</th>
                <th>Ng√†y thi</th>
                <th>ƒê∆°n gi√°</th>
              </tr>
            </thead>
            <tbody>
              {certificateData && certificateData.map((item, index) => (
                <tr key={index}>
                  <td>{item.ten}</td>
                  <td>{item.soLuong}</td>
                  <td>{item.ngayThi}</td>
                  <td>{item.donGia}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}

      {/* N√∫t x√°c nh·∫≠n thanh to√°n */}
      {customerData && !loading && (
        <button onClick={handleConfirmPayment}>X√°c nh·∫≠n thanh to√°n</button>
      )}
    </div>
  );
}

export default DonVi;
